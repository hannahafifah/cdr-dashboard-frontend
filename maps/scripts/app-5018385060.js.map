{"version":3,"sources":["scripts/app.js"],"names":["angular","module","webDevTec","getTec","data","title","url","description","logo","this","service","acmeNavbar","NavbarController","moment","$cookies","vm","relativeDate","creationDate","fromNow","username","get","$inject","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","$log","githubContributor","activate","getContributors","then","info","template","link","$http","limit","getContributorsComplete","response","getContributorsFailed","error","toJson","apiHost","factory","cdrs","$resource","getUserCount","start","end","getCallCount","getCallAverage","getDailyUserCallAttempt","getAverageUserLevel","auth","$rootScope","$q","authenticate","credentials","cb","method","success","status","userIsAuthenticated","put","firstname","userData","lastname","country","address","phone","register","updateinfo","update","isLoggedIn","checkauth","authCheck","loginStatus","getUserData","logout","remove","push","key","config","$httpProvider","defaults","withCredentials","RegisterController","$state","cred","$State","serviceCall","save","$promise","res","go","LoginController","$location","showAlert","email","password","alertMsg","closeAlert","StatisticsController","timestart","timeend","avgLevel","starttime","startOf","format","toString","endtime","endOf","name","y","gtfive","color","zpthreetillone","ltzpone","onetillfive","zponetillzpthree","zero","getBadgeData","startTime","endTime","userService","callback","alluser","all","allveruser","allver","callService","callattempt","init","callavg","parseFloat","avginit","callavgperday","days","Math","abs","diff","initializeDate","dateRange","d","Date","setDate","getDate","timeformat","fetchUser","date","arr","index","inrange","inrangever","fetchAllUser","fetchCall","ring","accept","loadChartData","dataArray","i","fetchData","serviceUser","loadTableData","populateChartData","user","verified","allverified","getChart","chartType","chartTitle","options","chart","zoomType","text","series","xAxis","dateTimeLabelFormats","day","loading","time","showChart","tabs","dateOptions","formatYear","startingDay","open1","popup1","opened","open2","popup2","open3","popup3","year","month","formats","altInputFormats","today","clear","graph","table","userLevel","level","submitDate","newUserChartOptions","allUserChartOptions","callChartOptions","pieChartConfig","colorByPoint","tableData","submitMonth","toDate","SettingsController","DashboardController","newUser","newVerifiedUser","callAttempt","avgCallAttempt","loadUserData","populateUserChartData","getWeeklyTotalUser","firstDayInWeek","loadCallData","populateCallChartData","getWeeklyTotalCall","attempt","incoming","userChartConfig","callChartConfig","runBlock","debug","onEvent","event","next","before","requireLogin","path","preventDefault","run","routerConfig","$stateProvider","$urlRouterProvider","state","resolve","s","otherwise","constant","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,iBAAkB,YAAa,YAAa,UAAW,aAAc,aAAc,SAAU,aAAc,YAAa,eAAgB,SAAU,OAAO,qBAIrK,WACE,YAOA,SAASC,KA4DP,QAASC,KACP,MAAOC,GA5DT,GAAIA,KAEAC,MAAS,YACTC,IAAO,yBACPC,YAAe,8BACfC,KAAQ,gBAGRH,MAAS,cACTC,IAAO,yBACPC,YAAe,4CACfC,KAAQ,oBAGRH,MAAS,SACTC,IAAO,qBACPC,YAAe,8BACfC,KAAQ,aAGRH,MAAS,UACTC,IAAO,4BACPC,YAAe,8BACfC,KAAQ,gBAGRH,MAAS,QACTC,IAAO,iCACPC,YAAe,0CACfC,KAAQ,cAGRH,MAAS,aACTC,IAAO,wCACPC,YAAe,oFACfC,KAAQ,mBAGRH,MAAS,YACTC,IAAO,2BACPC,YAAe,yHACfC,KAAQ,kBAGRH,MAAS,uBACTC,IAAO,yCACPC,YAAe,wEACfC,KAAQ,qBAGRH,MAAS,OACTC,IAAO,sBACPC,YAAe,oHACfC,KAAQ,YAIZC,MAAKN,OAASA,EA/DhBH,QACKC,OAAO,iBACPS,QAAQ,YAAaR,MAsE5B,WACE,YAOA,SAASS,KAeP,QAASC,GAAiBC,EAAQC,GAChC,GAAIC,GAAKN,IAGTM,GAAGC,aAAeH,EAAOE,EAAGE,cAAcC,UAC1CH,EAAGI,SAAWL,EAASM,IAAI,aAnB7BR,EAAiBS,SAAW,SAAU,WAAtC,IAAIC,IACFC,SAAU,IACVC,YAAa,oCACbC,OACIR,aAAc,KAElBS,WAAYd,EACZe,aAAc,KACdC,kBAAkB,EAGpB,OAAON,GAjBTtB,QACGC,OAAO,iBACPqB,UAAU,aAAcX,MA6B7B,WACE,YASA,SAASkB,GAAaC,GAYpB,QAASC,GAASN,EAAOO,EAAIC,EAAMlB,GACjC,GAAImB,GACAC,EAASL,EAASE,EAAG,IACvBI,UAAW,GACXC,YAAa,GACbC,WAAY,IACZC,MAAM,EACNC,QAAS,KAGXR,GAAGS,SAAS,iBAEZzC,QAAQ0C,QAAQjB,EAAMkB,YAAa,SAASC,GAC1CT,EAAOU,KAAKD,GAAOE,QAAnBX,cAGFD,EAAUT,EAAMsB,OAAO,kBAAmB,WACxC/C,QAAQ0C,QAAQ3B,EAAGiC,aAAc,SAASC,GACxCd,EAAOU,KAAKI,EAAYC,OAAOJ,QAA/BX,gBAIJV,EAAM0B,IAAI,WAAY,WACpBjB,MAKJ,QAASkB,GAAmBC,EAAMC,GAOhC,QAASC,KACP,MAAOC,KAAkBC,KAAK,WAC5BJ,EAAKK,KAAK,iCAId,QAASF,KACP,MAAOF,GAAkBE,gBAAgB,IAAIC,KAAK,SAASrD,GAGzD,MAFAW,GAAGiC,aAAe5C,EAEXW,EAAGiC,eAhBd,GAAIjC,GAAKN,IAETM,GAAGiC,gBAEHO,IA5CFH,EAAmB/B,SAAW,OAAQ,oBAFtC,IAAIC,IACFC,SAAU,IACVE,OACEkB,YAAa,KAEfgB,SAAU,SACVC,KAAM7B,EACNL,WAAY0B,EACZzB,aAAc,KAGhB,OAAOL,GAhBTO,EAAaR,SAAW,YADxBrB,QACGC,OAAO,iBACPqB,UAAU,eAAgBO,MAuE/B,WACE,YAOA,SAASyB,GAAkBD,EAAMQ,GAU/B,QAASL,GAAgBM,GASvB,QAASC,GAAwBC,GAC/B,MAAOA,GAAS5D,KAGlB,QAAS6D,GAAsBC,GAC7Bb,EAAKa,MAAM,oCAAsClE,QAAQmE,OAAOD,EAAM9D,MAAM,IAT9E,MAJK0D,KACHA,EAAQ,IAGHD,EAAMzC,IAAIgD,EAAU,0BAA4BN,GACpDL,KAAKM,GADDF,SAEEI,GAhBX,GAAIG,GAAU,4DAEV1D,GACF0D,QAASA,EACTZ,gBAAiBA,EAGnB,OAAO9C,GAVT4C,EAAkBjC,SAAW,OAAQ,SAHrCrB,QACGC,OAAO,iBACPoE,QAAQ,oBAAqBf,MAiClC,WACE,YAOA,SAASgB,GAAKC,GAIZ,QAASC,KAEP,MAAOD,GAAU,2EAA2EE,MAAO,aAAaC,IAAI,gBAKtH,QAASC,KACP,MAAOJ,GAAU,0EAA0EE,MAAO,aAAaC,IAAI,gBAMrH,QAASE,KACP,MAAOL,GAAU,2EAA2EE,MAAO,aAAaC,IAAI,gBAMtH,QAASG,KACP,MAAON,GAAU,+EAA+EE,MAAO,aAAaC,IAAI,gBAM1H,QAASI,KACP,MAAOP,GAAU,oFAAoFE,MAAO,aAAaC,IAAI,gBA/B/H,GAAI3D,GAAKN,IAOTM,GAAGyD,aAAeA,EAOlBzD,EAAG4D,aAAeA,EAOlB5D,EAAG6D,eAAiBA,EAOpB7D,EAAG8D,wBAA0BA,EAO7B9D,EAAG+D,oBAAsBA,EAtC3BR,EAAKjD,SAAW,aAJhBrB,QACGC,OAAO,iBACPS,QAAQ,OAAQ4D,MA6CrB,WACE,YAUA,SAASS,GAAKC,EAAYnB,EAAOoB,EAAInE,EAAUyD,GAU7C,QAASW,GAAaC,EAAaC,GAEjCvB,GAAOwB,OAAS,OAAQ/E,IAAM,qCAAsCF,KAAK+E,IACzEG,QAAQ,SAASlF,EAAMmF,GACP,MAAXA,IACDC,GAAsB,EAEtB1E,EAAS2E,IAAI,WAAYrF,EAAKsF,WAC9BC,EAAS,GAAG/C,MAAQxC,EAAKsF,UACzBC,EAAS,GAAG/C,MAAQxC,EAAKwF,SACzBD,EAAS,GAAG/C,MAAQxC,EAAKyF,QACzBF,EAAS,GAAG/C,MAAQxC,EAAK0F,QACzBH,EAAS,GAAG/C,MAAQxC,EAAK2F,OAE3BX,EAAGG,KAELrB,MAAM,SAAS9D,EAAMmF,GACnBC,GAAsB,EACtBJ,EAAGG,KAMP,QAASS,KACP,MAAOzB,GAAU,+CAKnB,QAAS0B,KACP,MAAO1B,GAAU,8CACf2B,QACEb,OAAS,SAOd,QAASc,KACR,MAAOX,GAKT,QAASY,KACP,MAAO7B,GAAU,iDAOnB,QAAS8B,KACPxC,GAAOwB,OAAO,MAAO/E,IAAM,4CACvBgF,QAAQ,SAAUlF,EAAMmF,GACpB,MAAe,OAAXA,GACAC,GAAsB,EACtBR,EAAWsB,aAAc,GAClB,IAGPd,GAAsB,EACtBR,EAAWsB,aAAc,GAClB,KAGfpC,MAAM,WAGF,MAFAsB,IAAsB,EACtBR,EAAWsB,YAAcd,GAClB,IAOjB,QAASe,KACP,MAAOZ,GAKT,QAASa,GAAOpB,GACdvB,GAAOwB,OAAO,MAAO/E,IAAM,wCAC3BgF,QAAQ,SAASlF,EAAMmF,GACrBC,GAAsB,EACtB1E,EAAS2F,OAAO,SAChB3F,EAAS2F,OAAO,aAChB3F,EAAS2F,OAAO,YAChB3F,EAAS2F,OAAO,WAChB3F,EAAS2F,OAAO,WAChB3F,EAAS2F,OAAO,SAEhBrB,EAAGG,KAELrB,MAAM,SAAS9D,EAAMmF,GACnBC,GAAsB,EACtBJ,EAAGG,KA5GP,GAAIxE,GAAKN,KACL+E,GAAsB,EACtBG,IACJA,GAASe,MAAMC,IAAM,cACrBhB,EAASe,MAAMC,IAAM,aACrBhB,EAASe,MAAMC,IAAM,YACrBhB,EAASe,MAAMC,IAAM,YACrBhB,EAASe,MAAMC,IAAM,UAwBrB5F,EAAGmE,aAAeA,EAMlBnE,EAAGiF,SAAWA,EAUdjF,EAAGkF,WAAaA,EAMhBlF,EAAGoF,WAAaA,EAQhBpF,EAAGqF,UAAYA,EAwBfrF,EAAGsF,UAAYA,EAMftF,EAAGwF,YAAcA,EAqBjBxF,EAAGyF,OAASA,EApHdzB,EAAK1D,SAAW,aAAc,QAAS,KAAM,WAAY,aALzDrB,QACGC,OAAO,iBACPS,QAAQ,OAAQqE,GAChB6B,QAAQ,gBAAiB,SAASC,GACjCA,EAAcC,SAASC,iBAAkB,QA2H/C,WACE,YAOA,SAASC,GAAmBjC,EAAMkC,EAAQjC,GACxC,GAAIjE,GAAKN,IAETM,GAAGgE,KAAOA,EACVhE,EAAGmG,QACHnG,EAAGoG,OAASF,EACZlG,EAAGiE,WAAaA,EAChBjE,EAAGV,MAAQ,8CAEXU,EAAGiF,SAAW,WACZ,GAAItF,GAAU,GAAIqE,GAAKiB,SAEnBoB,EAAc1G,EAAQ2G,KAAKtG,EAAGmG,KAClCE,GAAYE,SAAS7D,KACjB,SAAS8D,GACPN,EAAOO,GAAG,YAEZ,SAAStD,OAhBjB8C,EAAmB3F,SAAW,OAAQ,SAAU,cANhDrB,QACGC,OAAO,iBACPyB,WAAW,qBAAsBsF,MA4BtC,WACE,YAOA,SAASS,GAAgBzC,EAAY0C,EAAWT,EAAQlC,GACtD,GAAIhE,GAAKN,IAETM,GAAGV,MAAQ,iBAEXU,EAAGmG,QACHnG,EAAG4G,WAAY,EAEf5G,EAAGV,MAAQ,kCACXU,EAAGmC,MAAQ,WACT6B,EAAKG,cAAc0C,MAAQ7G,EAAGmG,KAAKU,MAAOC,SAAW9G,EAAGmG,KAAKW,UAAW,SAAStC,GACjE,MAAXA,GACDP,EAAWsB,YAAcvB,EAAKoB,aAE9Bc,EAAOO,GAAG,eAEVzG,EAAG+G,SAAW,6DACd/G,EAAG4G,WAAY,KAGnB5G,EAAGmG,SAGLnG,EAAGgH,WAAa,WACdhH,EAAG4G,WAAY,GAtBnBF,EAAgBpG,SAAW,aAAc,YAAa,SAAU,QAPhErB,QACGC,OAAO,iBACPyB,WAAW,kBAAmB+F,MAiCnC,WACE,YAOA,SAASO,GAAqB1D,EAAMzD,GAwKlC,QAASiE,GAAoBmD,EAAWC,GAEtC,GAAIC,MACAC,EAAYvH,EAAOoH,GAAWI,QAAQ,OAAOC,OAAO,kBAAkBC,WACtEC,EAAU3H,EAAOqH,GAASO,MAAM,OAAOH,OAAO,kBAAkBC,UAEpEJ,GAASzB,MAAMgC,KAAO,YACtBP,EAASzB,MAAMgC,KAAO,YACtBP,EAASzB,MAAMgC,KAAO,YACtBP,EAASzB,MAAMgC,KAAO,YACtBP,EAASzB,MAAMgC,KAAO,YACtBP,EAASzB,MAAMgC,KAAO,WAEtB,IAAIhI,GAAU,GAAI4D,GAAKQ,oBAEnBsC,EAAc1G,EAAQU,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GAiBxD,OAhBEpB,GAAYE,SAAS7D,KAAK,SAASrD,GAEjC+H,EAAS,GAAGQ,EAAIvI,EAAKwI,OACrBT,EAAS,GAAGU,MAAQ,UACpBV,EAAS,GAAGQ,EAAIvI,EAAK0I,eACrBX,EAAS,GAAGU,MAAQ,UACpBV,EAAS,GAAGQ,EAAIvI,EAAK2I,QACrBZ,EAAS,GAAGU,MAAQ,UACpBV,EAAS,GAAGQ,EAAIvI,EAAK4I,YACrBb,EAAS,GAAGU,MAAQ,UACpBV,EAAS,GAAGQ,EAAIvI,EAAK6I,iBACrBd,EAAS,GAAGU,MAAQ,UACpBV,EAAS,GAAGQ,EAAIvI,EAAK8I,KACrBf,EAAS,GAAGU,MAAQ,YAGjBV,EAGT,QAASgB,GAAaC,EAAWC,GAE/B,GAAIjB,GAAYvH,EAAOuI,GAAWf,QAAQ,OAAOC,OAAO,kBAAkBC,WACtEC,EAAU3H,EAAOwI,GAASZ,MAAM,OAAOH,OAAO,kBAAkBC,WAIhEe,EAAc,GAAIhF,GAAKE,YAE3B8E,GAAYlI,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASe,GAC7DxI,EAAGyI,QAAUD,EAASE,IACtB1I,EAAG2I,WAAaH,EAASI,QAG3B,IAAIC,GAAc,GAAItF,GAAKK,YAE3BiF,GAAYxI,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASe,GAC7DxI,EAAG8I,YAAcN,EAASO,OAG5BF,EAAc,GAAItF,GAAKM,eAEvBgF,EAAYxI,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASe,GAC7DxI,EAAGgJ,QAAUC,WAAWT,EAASU,WAGnCL,EAAc,GAAItF,GAAKO,wBAEvB+E,EAAYxI,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASe,GAC7DxI,EAAGmJ,cAAgBF,WAAWT,EAASU,WAGzClJ,EAAGoJ,KAAOC,KAAKC,IAAIxJ,EAAOuH,EAAW,kBAAkBkC,KAAKzJ,EAAO2H,EAAS,kBAAmB,SAAS,EAG1G,QAAS+B,GAAe9F,EAAO+D,GAK7B,IAAK,GAHDgC,MAGKC,EAAI,GAAIC,MAAKjG,GAAa+D,GAALiC,EAAcA,EAAEE,QAAQF,EAAEG,UAAY,GAAI,CAEtE,GAAIxC,GAAYvH,EAAO4J,GAAGpC,QAAQ,OAAOC,OAAO,wBAAwBC,WACpEsC,EAAahK,EAAOuH,EAAW,wBAAwBE,OAAO,UAAUC,UAE5EiC,GAAU9D,MAAMgC,KAAOmC,IAIzB,MAAOL,GAGT,QAASM,GAAUC,EAAMC,EAAKrE,EAAKsE,EAAOvK,GAExC,GAAI0H,GAAYvH,EAAOkK,GAAM1C,QAAQ,OAAOC,OAAO,kBAAkBC,WACjEC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,UAEjE7H,GAAQU,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASpI,GAC9C,SAARuG,EACCqE,EAAIC,GAAOtC,EAAIvI,EAAK8K,QAER,QAARvE,IACJqE,EAAIC,GAAOtC,EAAIvI,EAAK+K,cAK5B,QAASC,GAAaL,EAAMC,EAAKrE,EAAKsE,EAAOvK,GAE3C,GAAI0H,GAAYvH,EAAOkK,GAAM1C,QAAQ,OAAOC,OAAO,kBAAkBC,WACjEC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,UAEjE7H,GAAQU,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASpI,GAC9C,SAARuG,EACCqE,EAAIC,GAAOtC,EAAIvI,EAAKqJ,IAER,QAAR9C,IACJqE,EAAIC,GAAOtC,EAAIvI,EAAKuJ,UAK5B,QAAS0B,GAAUN,EAAMC,EAAKrE,EAAKsE,EAAOvK,GAExC,GAAI0H,GAAYvH,EAAOkK,GAAM1C,QAAQ,OAAOC,OAAO,kBAAkBC,WACjEC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,WAE7DnB,EAAc1G,EAAQU,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GACtDpB,GAAYE,SAAS7D,KAAK,SAASrD,GACtB,SAARuG,EACDqE,EAAIC,GAAOtC,EAAIvI,EAAK0J,KAEN,SAARnD,EACNqE,EAAIC,GAAOtC,EAAIvI,EAAKkL,KAEN,WAAR3E,IACNqE,EAAIC,GAAOtC,EAAIvI,EAAKmL,UAK5B,QAASC,GAAc/G,EAAOC,EAAKiC,EAAKvG,GAUtC,GAAIqL,GAAYlB,EAAe9F,EAAOC,EAEtC,IAAY,YAATtE,GAA+B,YAATA,EACvB,GAAIkJ,GAAc,GAAIhF,GAAKE,iBAExB,IAAY,SAATpE,EACN,GAAIwJ,GAAc,GAAItF,GAAKK,YAO7B,KAAK,GAJD+G,GAAE,EAEFzD,EAAYpH,EAAO4D,GAAO4D,QAAQ,OAAOC,OAAO,wBAAwBC,WAEnEkC,EAAI,GAAIC,MAAKzC,GAAiBvD,GAAL+F,EAAUA,EAAEE,QAAQF,EAAEG,UAAY,GAEtD,YAATxK,EACD0K,EAAUL,EAAGgB,EAAW9E,EAAK+E,EAAGpC,GAEjB,YAATlJ,EACNgL,EAAaX,EAAGgB,EAAW9E,EAAK+E,EAAGpC,GAEpB,SAATlJ,GACNiL,EAAUZ,EAAGgB,EAAW9E,EAAK+E,EAAG9B,GAGlC8B,GAGF,OAAOD,GAGT,QAASE,GAAUZ,EAAME,EAAOD,EAAK1B,EAAaM,GAEhD,GAAIxB,GAAYvH,EAAOkK,GAAM1C,QAAQ,OAAOC,OAAO,kBAAkBC,WACjEC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,WAE7DqD,EAActC,EAAYlI,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GAC1DoD,GAAYtE,SAAS7D,KAAK,SAASrD,GACjC4K,EAAIC,GAAOxB,IAAMrJ,EAAKqJ,IACtBuB,EAAIC,GAAOtB,OAASvJ,EAAKuJ,OACzBqB,EAAIC,GAAOC,QAAU9K,EAAK8K,QAC1BF,EAAIC,GAAOE,WAAa/K,EAAK+K,YAGjC,IAAI/D,GAAcwC,EAAYxI,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GAC5DpB,GAAYE,SAAS7D,KAAK,SAASrD,GACjC4K,EAAIC,GAAOnB,KAAO1J,EAAK0J,KACvBkB,EAAIC,GAAOK,KAAOlL,EAAKkL,KACvBN,EAAIC,GAAOM,OAASnL,EAAKmL,SAK7B,QAASM,GAAcpH,EAAOC,GAU5B,IAAK,GATD+G,GAAYlB,EAAe9F,EAAOC,GAElCuD,EAAYpH,EAAO4D,GAAO4D,QAAQ,OAAOC,OAAO,wBAAwBC,WAExEmD,EAAE,EAEFpC,EAAc,GAAIhF,GAAKE,aACvBoF,EAAc,GAAItF,GAAKK,aAElB8F,EAAI,GAAIC,MAAKzC,GAAiBvD,GAAL+F,EAAUA,EAAEE,QAAQF,EAAEG,UAAY,GAChEe,EAAUlB,EAAGiB,EAAGD,EAAWnC,EAAaM,GAC1C8B,GAGF,OAAOD,GAGT,QAASK,GAAkBrH,EAAOC,EAAKtE,GACrC,GAAY,YAATA,EAAmB,CACpB,GAAI2L,GAAOP,EAAc/G,EAAOC,EAAK,OAAQtE,GACzC4L,EAAWR,EAAc/G,EAAOC,EAAI,MAAOtE,EAE/C,SAEQsI,KAAO,WACPtI,KAAO2L,IAGPrD,KAAO,oBACPtI,KAAO4L,IAIZ,GAAY,YAAT5L,EAAmB,CACzB,GAAIoJ,GAAUgC,EAAc/G,EAAOC,EAAK,OAAQtE,GAC5C6L,EAAcT,EAAc/G,EAAOC,EAAI,MAAOtE,EAElD,SAEQsI,KAAO,aACPtI,KAAOoJ,IAGPd,KAAO,sBACPtI,KAAO6L,IAIZ,GAAY,SAAT7L,EAAgB,CACtB,GAAI0J,GAAO0B,EAAc/G,EAAOC,EAAK,OAAQtE,GACzCkL,EAAOE,EAAc/G,EAAOC,EAAI,OAAQtE,GACxCmL,EAASC,EAAc/G,EAAOC,EAAI,SAAUtE,EAEhD,SAEQsI,KAAO,eACPtI,KAAO0J,IAGPpB,KAAO,gBACPtI,KAAOkL,IAGP5C,KAAO,gBACPtI,KAAOmL,KAQnB,QAASW,GAASzH,EAAOC,EAAKyH,EAAW/L,EAAMgM,GAS7C,OACIC,SACIC,OACIzJ,KAAMsJ,EACNI,SAAU,MAGlBlM,OACGmM,KAAMJ,GAETK,OAAQX,EAAkBrH,EAAOC,EAAMtE,GACvCsM,OACE7J,KAAM,WACN8J,sBACGC,IAAK,UAGVC,SAAS,GAjdf,GAAI9L,GAAKN,IACTM,GAAG+L,QACH/L,EAAGgM,WAAY,EACfhM,EAAGiM,KAAO,QAEVjM,EAAGkM,aACDC,WAAa,OACbC,YAAc,GAGhBpM,EAAGqM,MAAQ,WACTrM,EAAGsM,OAAOC,QAAS,GAGrBvM,EAAGwM,MAAQ,WACTxM,EAAGyM,OAAOF,QAAS,GAGrBvM,EAAG0M,MAAQ,WACT1M,EAAG2M,OAAOJ,QAAS,GAGrBvM,EAAG4J,QAAU,SAASgD,EAAMC,EAAOhB,GACjC7L,EAAG+L,KAAK1E,UAAY,GAAIsC,MAAKiD,EAAMC,EAAOhB,GAC1C7L,EAAG+L,KAAKtE,QAAU,GAAIkC,MAAKiD,EAAMC,EAAOhB,IAG1C7L,EAAG8M,SAAW,eAAgB,aAAc,aAAc,aAC1D9M,EAAGuH,OAASvH,EAAG8M,QAAQ,GACvB9M,EAAG+M,iBAAmB,cAEtB/M,EAAGsM,QACDC,QAAS,GAGXvM,EAAGyM,QACDF,QAAS,GAGXvM,EAAG2M,QACDJ,QAAS,GAGXvM,EAAGgN,MAAQ,WACThN,EAAG+L,KAAK1E,UAAY,GAAIsC,MACxB3J,EAAG+L,KAAKtE,QAAU,GAAIkC,OAGxB3J,EAAGiN,MAAQ,WACTjN,EAAG+L,KAAK1E,UAAY,KACpBrH,EAAG+L,KAAKtE,QAAU,MAGpBzH,EAAGkN,MAAQ,WACTlN,EAAGiM,KAAO,SAGZjM,EAAGmN,MAAQ,WACTnN,EAAGiM,KAAO,SAGZjM,EAAGoN,YAEGtF,MAAQ,UACRuF,MAAQ,EACRxL,MAAQ,4BAGRiG,MAAQ,UACRuF,MAAQ,EACRxL,MAAQ,0CAGRiG,MAAQ,UACRuF,MAAQ,EACRxL,MAAQ,gCAGRiG,MAAQ,UACRuF,MAAQ,EACRxL,MAAQ,wCAGRiG,MAAQ,UACRuF,MAAQ,EACRxL,MAAQ,6CAGRiG,MAAQ,UACRuF,MAAQ,EACRxL,MAAQ,iBAId7B,EAAGsN,WAAa,WAEdlF,EAAapI,EAAG+L,KAAK1E,UAAWrH,EAAG+L,KAAKtE,SAExCzH,EAAGgM,WAAY,EAEfhM,EAAGuN,oBAAsBpC,EAASnL,EAAG+L,KAAK1E,UAAWrH,EAAG+L,KAAKtE,QAAS,OAAQ,UAAW,uBACzFzH,EAAGwN,oBAAsBrC,EAASnL,EAAG+L,KAAK1E,UAAWrH,EAAG+L,KAAKtE,QAAS,OAAQ,UAAW,yBACzFzH,EAAGyN,iBAAmBtC,EAASnL,EAAG+L,KAAK1E,UAAWrH,EAAG+L,KAAKtE,QAAS,OAAQ,OAAQ,mBAEnFzH,EAAG0N,gBACCpC,SACAC,OACIzJ,KAAM,WAGVxC,OACEmM,KAAM,mCAERC,SACG/D,KAAM,kCACNgG,cAAc,EACdtO,KAAO0E,EAAoB/D,EAAG+L,KAAK1E,UAAUrH,EAAG+L,KAAKtE,WAExDkE,OACE7J,KAAM,YAERgK,SAAS,GAIb9L,EAAG4N,UAAY9C,EAAc9K,EAAG+L,KAAK1E,UAAWrH,EAAG+L,KAAKtE,UAI1DzH,EAAG6N,YAAc,WAEf,GAAInK,GAAQ5D,EAAOE,EAAG6M,OAAOvF,QAAQ,SAASwG,SAC1CnK,EAAM7D,EAAOE,EAAG6M,OAAOnF,MAAM,SAASoG,QAE1C1F,GAAa1E,EAAOC,GAEpB3D,EAAGgM,WAAY,EAEfhM,EAAGuN,oBAAsBpC,EAASzH,EAAOC,EAAK,OAAQ,UAAW,uBACjE3D,EAAGwN,oBAAsBrC,EAASzH,EAAOC,EAAK,OAAQ,UAAW,yBACjE3D,EAAGyN,iBAAmBtC,EAASzH,EAAOC,EAAK,OAAQ,OAAQ,mBAE3D3D,EAAG0N,gBACCpC,SACAC,OACIzJ,KAAM,WAGVxC,OACEmM,KAAM,mCAERC,SACG/D,KAAM,kCACNgG,cAAc,EACdtO,KAAO0E,EAAoBL,EAAMC,KAEpCgI,OACE7J,KAAM,YAERgK,SAAS,GAGb9L,EAAG4N,UAAY9C,EAAcpH,EAAOC,IAhKxCsD,EAAqB3G,SAAW,OAAQ,UARxCrB,QACGC,OAAO,iBACPyB,WAAW,uBAAwBsG,MA6dxC,WACE,YAOA,SAAS8G,KACP,GAAI/N,GAAKN,IAETM,GAAGmG,QARLlH,QACGC,OAAO,iBACPyB,WAAW,qBAAsBoN,MAWtC,WACE,YAOA,SAASC,GAAoBzK,EAAMzD,GAkDjC,QAASsI,GAAa4B,GAElB,GAAI3C,GAAYvH,EAAOkK,GAAM1C,QAAQ,OAAOC,OAAO,kBAAkBC,WACjEC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,WAE7De,EAAc,GAAIhF,GAAKE,YAE3B8E,GAAYlI,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASe,GAC7DxI,EAAGiO,QAAUzF,EAAS2B,QACtBnK,EAAGkO,gBAAkB1F,EAAS4B,YAGhC,IAAIvB,GAAc,GAAItF,GAAKK,YAE3BiF,GAAYxI,KAAKqD,MAAQ2D,EAAY1D,IAAM8D,GAAW,SAASe,GAC7DxI,EAAGmO,YAAc3F,EAASO,KAC1B/I,EAAGoO,eAAiB5F,EAAS+B,OAInC,QAASf,GAAeQ,GAKtB,IAAK,GAHDP,MACAvC,EAAYpH,EAAOkK,GAAM1C,QAAQ,WAAWC,OAAO,wBAAwBC,WAEtEkC,EAAI,GAAIC,MAAKzC,GAAiB8C,GAALN,EAAWA,EAAEE,QAAQF,EAAEG,UAAY,GAAI,CAEvE,GAAIxC,GAAYvH,EAAO4J,GAAGpC,QAAQ,OAAOC,OAAO,wBAAwBC,WACpEsC,EAAahK,EAAOuH,EAAW,wBAAwBE,OAAO,UAAUC,UAC5EiC,GAAU9D,MAAMgC,KAAOmC,IAIzB,MAAOL,GAGT,QAASM,GAAUC,EAAMC,EAAKrE,EAAKsE,EAAOvK,GAExC,GAAI0H,GAAYvH,EAAOkK,GAAM1C,QAAQ,OAAOC,OAAO,kBAAkBC,WACjEC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,WAG7DnB,EAAc1G,EAAQU,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GACtDpB,GAAYE,SAAS7D,KAAK,SAASrD,GAC9BuG,EAEDqE,EAAIC,GAAOtC,EAAIvI,EAAK8K,QAKpBF,EAAIC,GAAOtC,EAAIvI,EAAK+K,aAM5B,QAASiE,GAAarE,EAAMpE,GAS1B,IAAK,GAPD8E,GAAYlB,EAAeQ,GAE3BzB,EAAc,GAAIhF,GAAKE,aACvBkH,EAAE,EAEFzD,EAAYpH,EAAOkK,GAAM1C,QAAQ,WAAWC,OAAO,wBAAwBC,WAEtEkC,EAAI,GAAIC,MAAKzC,GAAiB8C,GAALN,EAAWA,EAAEE,QAAQF,EAAEG,UAAY,GAEnEE,EAAUL,EAAGgB,EAAW9E,EAAK+E,EAAGpC,GAChCoC,GAIF,OAAOD,GAGT,QAAS4D,GAAsBtE,GAC7B,GAAIgB,GAAOqD,EAAarE,EAAK,GACzBiB,EAAWoD,EAAarE,EAAK,EAEjC,SAEQrC,KAAO,WACPtI,KAAO2L,IAGPrD,KAAO,oBACPtI,KAAO4L,IAKjB,QAASsD,GAAmBvE,GAE1B,GAAIwE,GAAiB1O,EAAOkK,GAAM1C,QAAQ,WAAWC,OAAO,wBAAwBC,WAEhFH,EAAYvH,EAAO0O,EAAgB,wBAAwBlH,QAAQ,OAAOC,OAAO,kBAAkBC,WACnGC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,WAE7D7H,EAAU,GAAI4D,GAAKE,aAEnB4C,EAAc1G,EAAQU,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GACtDpB,GAAYE,SAAS7D,KAAK,SAASrD,GACjCW,EAAG0I,IAAMrJ,EAAKqJ,IACf1I,EAAG4I,OAASvJ,EAAKuJ,OACjB5I,EAAGmK,QAAU9K,EAAK8K,QAClBnK,EAAGoK,WAAa/K,EAAK+K,aAK1B,QAASE,GAAUN,EAAMC,EAAKrE,EAAKsE,EAAOvK,GAExC,GAAI0H,GAAYvH,EAAOkK,GAAM1C,QAAQ,OAAOC,OAAO,kBAAkBC,WACjEC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,WAG7DnB,EAAc1G,EAAQU,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GACtDpB,GAAYE,SAAS7D,KAAK,SAASrD,GACtB,IAARuG,EAEDqE,EAAIC,GAAOtC,EAAIvI,EAAK0J,KAIN,IAARnD,EACNqE,EAAIC,GAAOtC,EAAIvI,EAAKkL,KAIpBN,EAAIC,GAAOtC,EAAIvI,EAAKmL,SAM5B,QAASiE,GAAazE,EAAMpE,GAS1B,IAAK,GAPD8E,GAAYlB,EAAeQ,GAE3BnB,EAAc,GAAItF,GAAKK,aACvB+G,EAAE,EAEFzD,EAAYpH,EAAOkK,GAAM1C,QAAQ,WAAWC,OAAO,wBAAwBC,WAEtEkC,EAAI,GAAIC,MAAKzC,GAAiB8C,GAALN,EAAWA,EAAEE,QAAQF,EAAEG,UAAY,GAEnES,EAAUZ,EAAGgB,EAAW9E,EAAK+E,EAAG9B,GAChC8B,GAIF,OAAOD,GAGT,QAASgE,GAAsB1E,GAC7B,GAAIjB,GAAO0F,EAAazE,EAAK,GACzBO,EAAOkE,EAAazE,EAAK,GACzBQ,EAASiE,EAAazE,EAAK,EAE/B,SAEQ3K,KAAM0J,EACNpB,KAAM,iBAGNtI,KAAMkL,EACN5C,KAAM,kBAGNtI,KAAMmL,EACN7C,KAAM,kBAKhB,QAASgH,GAAmB3E,GAE1B,GAAIwE,GAAiB1O,EAAOkK,GAAM1C,QAAQ,WAAWC,OAAO,wBAAwBC,WAEhFH,EAAYvH,EAAO0O,EAAgB,wBAAwBlH,QAAQ,OAAOC,OAAO,kBAAkBC,WACnGC,EAAU3H,EAAOkK,GAAMtC,MAAM,OAAOH,OAAO,kBAAkBC,WAE7D7H,EAAU,GAAI4D,GAAKK,aAEnByC,EAAc1G,EAAQU,KAAKqD,MAAQ2D,EAAW1D,IAAM8D,GACtDpB,GAAYE,SAAS7D,KAAK,SAASrD,GAClCW,EAAG4O,QAAUvP,EAAK0J,KAClB/I,EAAG6O,SAAWxP,EAAKkL,KACnBvK,EAAGwK,OAASnL,EAAKmL,SA7OtB,GAAIxK,GAAKN,IAETM,GAAGgN,MAAQ,GAAIrD,MAAK,cACpBvB,EAAapI,EAAGgN,MAAOzJ,GACvBgL,EAAmBvO,EAAGgN,OACtB2B,EAAmB3O,EAAGgN,OAEtBhN,EAAG8O,iBACCxD,SACIC,OACIzJ,KAAM,OACN0J,SAAU,MAGlBlM,OACGmM,KAAM,6BAETC,OAAQ4C,EAAsBtO,EAAGgN,OACjCrB,OACE7J,KAAM,WACN8J,sBACGC,IAAK,UAGVC,SAAS,GAGb9L,EAAG+O,iBACCzD,SACIC,OACIzJ,KAAM,OACN0J,SAAU,MAGlBlM,OACGmM,KAAM,6BAETC,OAAQgD,EAAsB1O,EAAGgN,OACjCrB,OACE7J,KAAM,WACN8J,sBACGC,IAAK,UAGVC,SAAS,GA1CfkC,EAAoB1N,SAAW,OAAQ,UATvCrB,QACGC,OAAO,iBACPyB,WAAW,sBAAuBqN,MA4PvC,WACE,YAOA,SAASgB,GAAS1M,EAAK2B,EAAY0C,EAAW3C,GAE5C1B,EAAK2M,MAAM,eAEX,IAAIC,GAAUjL,EAAW7B,IAAI,oBAAqB,SAAS+M,EAAOC,EAAMC,GACtE,GAAGD,EAAKE,cAAgBD,EAAOC,aAAa,CAC1C,GAAI3P,GAAU,GAAIqE,GAAKqB,SACvB1F,GAAQU,MAAMkG,SAAS7D,KACrB,SAASS,IACHiM,EAAKE,cAAgBD,EAAOC,eAAkC,MAAjBnM,EAAMqB,SAGrDmC,EAAU4I,KAAK,UACfJ,EAAMK,sBAOhBvL,GAAW7B,IAAI,WAAY8M,GAf7BF,EAAS1O,SAAW,OAAQ,aAAc,YAAa,QAVvDrB,QACGC,OAAO,iBACPuQ,IAAIT,MA6BT,WACE,YAOA,SAASU,GAAaC,EAAgBC,GACpCD,EACGE,MAAM,QACLtQ,IAAK,IACLkB,YAAa,+BACbE,WAAY,kBACZC,aAAc,QACd0O,cAAc,IAEfO,MAAM,SACLtQ,IAAK,SACLkB,YAAa,+BACbE,WAAY,kBACZC,aAAc,QACd0O,cAAc,IAEfO,MAAM,YACLtQ,IAAK,YACLkB,YAAa,qCACbE,WAAY,qBACZC,aAAc,WACd0O,cAAc,IAEfO,MAAM,WACLtQ,IAAK,oBACLkB,YAAa,6CACb6O,cAAc,IAEfO,MAAM,aACLtQ,IAAK,aACLkB,YAAa,+BACbE,WAAY,sBACZC,aAAc,YACd0O,cAAc,IAEfO,MAAM,cACLtQ,IAAK,cACLkB,YAAa,iCACbE,WAAY,uBACZC,aAAc,aACd0O,cAAc,IAEfO,MAAM,YACLtQ,IAAK,YACLkB,YAAa,6BACbE,WAAY,qBACZC,aAAc,WACd0O,cAAc,IAEfO,MAAM,UACLtQ,IAAK,UACLuQ,SACErK,QAAA,YAAA,aAAA,OAAS,SAASkB,EAAW1C,EAAYD,GACvC,UACAA,GAAKyB,OAAO,SAASsK,GACV,MAANA,IACD9L,EAAWsB,YAAcvB,EAAKoB,aAC9BuB,EAAU4I,KAAK,gBAKvBD,cAAc,IAGlBM,EAAmBI,UAAU,UA3D/BN,EAAapP,SAAW,iBAAkB,sBAX1CrB,QACGC,OAAO,iBACP2G,OAAO6J,MA0EZ,WACE,YAEAzQ,SACGC,OAAO,iBACP+Q,SAAS,WAAYlP,UACrBkP,SAAS,SAAUnQ,WAIxB,WACE,YAOA,SAAS+F,GAAOqK,EAAcC,GAE5BD,EAAaE,cAAa,GAG1BD,EAAaE,WAAY,EACzBF,EAAaG,QAAU,IACvBH,EAAaI,cAAgB,kBAC7BJ,EAAaK,mBAAoB,EACjCL,EAAaM,aAAc,EAF7B5K,EAAOvF,SAAW,eAAgB,gBAZlCrB,QACGC,OAAO,iBACP2G,OAAOA,MAiBZ5G,QAAQC,OAAO,iBAAiBuQ,KAAK,iBAAkB,SAASiB,GAAiBA,EAAehM,IAAI,+BAA+B,mzGACnIgM,EAAehM,IAAI,6BAA6B,gkEAChDgM,EAAehM,IAAI,sCAAsC,sQACzDgM,EAAehM,IAAI,iCAAiC,0mLACpDgM,EAAehM,IAAI,+BAA+B,87BAClDgM,EAAehM,IAAI,qCAAqC;AACxDgM,EAAehM,IAAI,6CAA6C,sQAChEgM,EAAehM,IAAI,oCAAoC","file":"scripts/app-5018385060.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'toastr', 'nvd3','highcharts-ng']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('cdrsDashboard')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      },\n      {\n        'title': 'Less',\n        'url': 'http://lesscss.org/',\n        'description': 'Less extends the CSS language, adding features that allow variables, mixins, functions and many other techniques.',\n        'logo': 'less.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment, $cookies) {\n      var vm = this;\n\n      // \"vm.creationDate\" is available by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n      vm.username = $cookies.get('firstname');\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('cdrsDashboard')\r\n    .service('cdrs', cdrs);\r\n\r\n  /** @ngInject */\r\n  function cdrs($resource) {\r\n\r\n    var vm = this;\r\n    \r\n    function getUserCount(){\r\n     // return $resource('http://localhost:8080/api/v1/getusercount',{},{});\r\n      return $resource('http://localhost:8080/api/v1/getusercount?starttime=:start&endtime=:end',{start: '@starttime',end:'@endtime'},{});\r\n    }\r\n\r\n    vm.getUserCount = getUserCount;\r\n\r\n    function getCallCount(){\r\n      return $resource('http://localhost:8080/api/v1/getcdrcount?starttime=:start&endtime=:end',{start: '@starttime',end:'@endtime'},{});\r\n     // return $resource('http://localhost:8080/api/v1/getcdrcount',{},{});\r\n    }\r\n\r\n    vm.getCallCount = getCallCount;\r\n\r\n    function getCallAverage(){\r\n      return $resource('http://localhost:8080/api/v1/getcaaverage?starttime=:start&endtime=:end',{start: '@starttime',end:'@endtime'},{});\r\n     // return $resource('http://localhost:8080/api/v1/getcdrcount',{},{});\r\n    }\r\n\r\n    vm.getCallAverage = getCallAverage;\r\n\r\n    function getDailyUserCallAttempt(){\r\n      return $resource('http://localhost:8080/api/v1/getcauseraverage?starttime=:start&endtime=:end',{start: '@starttime',end:'@endtime'},{});\r\n     // return $resource('http://localhost:8080/api/v1/getcdrcount',{},{});\r\n    }\r\n\r\n    vm.getDailyUserCallAttempt = getDailyUserCallAttempt;\r\n\r\n    function getAverageUserLevel(){\r\n      return $resource('http://localhost:8080/api/v1/getcauseraveragelevel?starttime=:start&endtime=:end',{start: '@starttime',end:'@endtime'},{});\r\n     // return $resource('http://localhost:8080/api/v1/getcdrcount',{},{});\r\n    }\r\n\r\n    vm.getAverageUserLevel = getAverageUserLevel;\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('cdrsDashboard')\r\n    .service('auth', auth)\r\n    .config(['$httpProvider', function($httpProvider) {\r\n      $httpProvider.defaults.withCredentials = true;\r\n    }]);\r\n\r\n  /** @ngInject */\r\n  function auth($rootScope, $http, $q, $cookies, $resource) {\r\n    var vm = this;\r\n    var userIsAuthenticated = false;\r\n    var userData = [];\r\n    userData.push({key : \"firstname\"})\r\n    userData.push({key : \"lastname\"})\r\n    userData.push({key : \"country\"})\r\n    userData.push({key : \"address\"})\r\n    userData.push({key : \"phone\"})\r\n\r\n    function authenticate(credentials, cb){\r\n\r\n      $http({method : 'POST', url : 'http://localhost:8080/api/v1/login', data:credentials}).\r\n      success(function(data, status){\r\n        if(status === 200){\r\n          userIsAuthenticated = true;\r\n          \r\n          $cookies.put(\"username\", data.firstname)\r\n          userData[0].value = data.firstname;\r\n          userData[1].value = data.lastname;\r\n          userData[2].value = data.country;\r\n          userData[3].value = data.address;\r\n          userData[4].value = data.phone;\r\n        }\r\n        cb(status);\r\n      }).\r\n      error(function(data, status){\r\n        userIsAuthenticated = false;\r\n        cb(status);\r\n      })\r\n    }\r\n\r\n    vm.authenticate = authenticate;\r\n\r\n    function register(){\r\n      return $resource('http://localhost:8080/api/v1/register',{},{});\r\n    }\r\n\r\n    vm.register = register;\r\n\r\n    function updateinfo(){\r\n      return $resource('http://localhost:8080/api/v1/updateuser',{},{\r\n        update : {\r\n          method : 'PUT'\r\n        }\r\n      });\r\n    }\r\n\r\n    vm.updateinfo = updateinfo;\r\n\r\n     function isLoggedIn() {\r\n      return userIsAuthenticated; \r\n    }\r\n\r\n    vm.isLoggedIn = isLoggedIn;\r\n\r\n    function checkauth() {\r\n      return $resource('http://localhost:8080/api/v1/checklogin',{},{\r\n      });\r\n      }\r\n\r\n\r\n    vm.checkauth = checkauth;\r\n\r\n    function authCheck() {\r\n      $http({method:'GET', url : 'http://localhost:8080/api/v1/checklogin'}).\r\n          success(function (data, status) {\r\n              if (status === 200) {\r\n                  userIsAuthenticated = true;\r\n                  $rootScope.loginStatus = true;\r\n                  return true;\r\n              } \r\n              else {\r\n                  userIsAuthenticated = false;\r\n                  $rootScope.loginStatus = false;\r\n                  return false\r\n              }\r\n          }).\r\n          error(function () {\r\n              userIsAuthenticated = false;\r\n              $rootScope.loginStatus = userIsAuthenticated;\r\n              return false\r\n          })\r\n      }\r\n\r\n\r\n    vm.authCheck = authCheck;\r\n\r\n    function getUserData(){\r\n      return userData;\r\n    }\r\n\r\n    vm.getUserData = getUserData;\r\n\r\n    function logout(cb){\r\n      $http({method:'GET', url : 'http://localhost:8080/api/v1/logout'}).\r\n      success(function(data, status){\r\n        userIsAuthenticated = false;\r\n        $cookies.remove('token');\r\n        $cookies.remove('firstname');\r\n        $cookies.remove('lastname');\r\n        $cookies.remove('address');\r\n        $cookies.remove('country');\r\n        $cookies.remove('phone')\r\n        \r\n        cb(status)\r\n      }).\r\n      error(function(data, status){\r\n        userIsAuthenticated = true;\r\n        cb(status)\r\n      })\r\n    }\r\n\r\n    vm.logout = logout;\r\n\r\n  }\r\n\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController(auth, $state, $rootScope) {\n    var vm = this;\n\n    vm.auth = auth;\n    vm.cred = {};\n    vm.$State = $state;\n    vm.$rootScope = $rootScope;\n    vm.title = \"Please Enter Email and Password to Register\";\n\n    vm.register = function(){\n      var service = new auth.register();\n      // console.log(authService)\n      var serviceCall = service.save(vm.cred);\n      serviceCall.$promise.then(\n          function(res){\n            $state.go('success');\n          },\n          function(error){\n          }\n        )\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController($rootScope, $location, $state, auth) {\n    var vm = this;\n\n    vm.title = \"Yay login page\";\n\n    vm.cred = {};\n    vm.showAlert = false;\n\n    vm.title = \"Please Enter Email and Password\";\n    vm.login = function(){\n      auth.authenticate({email : vm.cred.email, password : vm.cred.password}, function(status){\n        if(status === 200){\n          $rootScope.loginStatus = auth.isLoggedIn();\n\n          $state.go('dashboard');\n        }else{\n          vm.alertMsg = \"Wrong Email or Password. Please re-enter your credentials \";\n          vm.showAlert = true;\n        }\n      });\n      vm.cred={};\n    }\n\n    vm.closeAlert = function() {\n      vm.showAlert = false;\n    };\n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .controller('StatisticsController', StatisticsController);\n\n  /** @ngInject */\n  function StatisticsController(cdrs, moment) {\n    var vm = this;\n    vm.time = {};\n    vm.showChart = false;\n    vm.tabs = 'table';\n\n    vm.dateOptions = {\n      formatYear : 'YYYY',\n      startingDay : 1\n    }\n\n    vm.open1 = function(){\n      vm.popup1.opened = true;\n    }\n\n    vm.open2 = function(){\n      vm.popup2.opened = true;\n    }\n\n    vm.open3 = function(){\n      vm.popup3.opened = true;\n    }\n\n    vm.setDate = function(year, month, day) {\n      vm.time.starttime = new Date(year, month, day);\n      vm.time.endtime = new Date(year, month, day);\n    };\n\n    vm.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n    vm.format = vm.formats[0];\n    vm.altInputFormats = ['M!/d!/yyyy'];\n\n    vm.popup1 = {\n      opened : false\n    }\n\n    vm.popup2 = {\n      opened : false\n    }\n\n    vm.popup3 = {\n      opened : false\n    }\n\n    vm.today = function(){\n      vm.time.starttime = new Date();\n      vm.time.endtime = new Date();\n    }\n\n    vm.clear = function(){\n      vm.time.starttime = null;\n      vm.time.endtime = null;\n    }\n\n    vm.graph = function(){\n      vm.tabs = 'graph'\n    }\n\n    vm.table = function(){\n      vm.tabs = 'table'\n    }\n\n    vm.userLevel = [\n        {\n          color : '#FF5722',\n          level : 1,\n          value : \"> 5 call/day ( < 0.2 ) \"\n        },\n        {\n          color : '#4CAF50',\n          level : 2,\n          value : \"> 0.3 -=< 1 call/day ( >= 1 -< 3.3 ) \"\n        },\n        {\n          color : '#03A9F4',\n          level : 3,\n          value : \"< = 0.1 call/day ( >= 10 ) \"\n        },\n        {\n          color : '#009688',\n          level : 4,\n          value : \"> 1 -<= 5 call/day ( >= 0.2 -< 1 ) \"\n        },\n        {\n          color : '#F44336',\n          level : 5,\n          value : \"> 0.1 -=< 0.3 call/day ( >= 3.3 -< 10 ) \"\n        },\n        {\n          color : '#607D8B',\n          level : 6,\n          value : \"Tidak Pernah\"\n        }\n    ];\n\n    vm.submitDate = function(){\n      \n      getBadgeData(vm.time.starttime, vm.time.endtime);\n      \n      vm.showChart = true;\n\n      vm.newUserChartOptions = getChart(vm.time.starttime, vm.time.endtime, 'line', 'newuser', 'New User Statistics');\n      vm.allUserChartOptions = getChart(vm.time.starttime, vm.time.endtime, 'line', 'alluser', 'Total User Statistics');\n      vm.callChartOptions = getChart(vm.time.starttime, vm.time.endtime, 'line', 'call', 'Call Statistics');\n  \n      vm.pieChartConfig = {\n          options: {\n          chart: {\n              type: 'column'\n          }\n          },\n          title: {\n            text: 'Average User Call Attempt Level'\n          },\n          series : [{\n             name: 'Usel Call Attempt Average Level',\n             colorByPoint: true,\n             data : getAverageUserLevel(vm.time.starttime,vm.time.endtime)\n          }],\n          xAxis: {\n            type: 'category'\n          },\n          loading: false\n      }\n      \n      \n      vm.tableData = loadTableData(vm.time.starttime, vm.time.endtime);\n      // console.log(vm.tableData)\n    }\n\n    vm.submitMonth = function(){\n\n      var start = moment(vm.month).startOf('month').toDate();\n      var end = moment(vm.month).endOf('month').toDate();\n\n      getBadgeData(start, end)\n\n      vm.showChart = true;\n\n      vm.newUserChartOptions = getChart(start, end, 'line', 'newuser', 'New User Statistics');\n      vm.allUserChartOptions = getChart(start, end, 'line', 'alluser', 'Total User Statistics');\n      vm.callChartOptions = getChart(start, end, 'line', 'call', 'Call Statistics');\n\n      vm.pieChartConfig = {\n          options: {\n          chart: {\n              type: 'column'\n          }\n          },\n          title: {\n            text: 'Average User Call Attempt Level'\n          },\n          series : [{\n             name: 'Usel Call Attempt Average Level',\n             colorByPoint: true,\n             data : getAverageUserLevel(start,end)\n          }],\n          xAxis: {\n            type: 'category'\n          },\n          loading: false\n      }\n      \n      vm.tableData = loadTableData(start, end);\n    }\n\n    \n\n    function getAverageUserLevel(timestart, timeend){\n      \n      var avgLevel = [];\n      var starttime = moment(timestart).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(timeend).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n      avgLevel.push({name : \"Level 1\"}) //0\n      avgLevel.push({name : \"Level 2\"}) //1\n      avgLevel.push({name : \"Level 3\"}) //2\n      avgLevel.push({name : \"Level 4\"}) //3\n      avgLevel.push({name : \"Level 5\"}) //4\n      avgLevel.push({name : \"Level 6\"})//5\n\n      var service = new cdrs.getAverageUserLevel();\n\n      var serviceCall = service.get({start : starttime, end : endtime});\n        serviceCall.$promise.then(function(data){\n          // console.log(data)\n          avgLevel[0].y = data.gtfive;\n          avgLevel[0].color = '#FF5722';\n          avgLevel[1].y = data.zpthreetillone;\n          avgLevel[1].color = '#4CAF50';\n          avgLevel[2].y = data.ltzpone;\n          avgLevel[2].color = '#03A9F4';\n          avgLevel[3].y = data.onetillfive;\n          avgLevel[3].color = '#009688';\n          avgLevel[4].y = data.zponetillzpthree;\n          avgLevel[4].color = '#F44336';\n          avgLevel[5].y = data.zero;\n          avgLevel[5].color = '#607D8B';\n      });\n\n      return avgLevel\n    }\n\n    function getBadgeData(startTime, endTime){\n\n      var starttime = moment(startTime).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(endTime).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      \n      // console.log(startTime, endTime)\n\n      var userService = new cdrs.getUserCount();\n\n      userService.get({start : starttime , end : endtime} , function(callback){\n        vm.alluser = callback.all;\n        vm.allveruser = callback.allver;\n      });\n\n      var callService = new cdrs.getCallCount();\n\n      callService.get({start : starttime , end : endtime} , function(callback){\n        vm.callattempt = callback.init;\n      });\n\n      callService = new cdrs.getCallAverage();\n      \n      callService.get({start : starttime , end : endtime} , function(callback){\n        vm.callavg = parseFloat(callback.avginit);\n      });\n\n      callService = new cdrs.getDailyUserCallAttempt();\n      \n      callService.get({start : starttime , end : endtime} , function(callback){\n        vm.callavgperday = parseFloat(callback.avginit);\n      });\n\n      vm.days = Math.abs(moment(starttime, \"YYYYMMDDHHmmss\").diff(moment(endtime, \"YYYYMMDDHHmmss\"), 'days'))+1\n    }\n\n    function initializeDate(start, endtime){\n      \n      var dateRange = [];\n      // var timestart = moment(date).startOf('isoweek').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n      \n      for (var d = new Date(start); d <= endtime; d.setDate(d.getDate() + 1)) {\n\n        var starttime = moment(d).startOf('day').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n        var timeformat = moment(starttime, \"MM/DD/YYYY h:mm:ss A\").format(\"DD MMM\").toString();\n        // console.log(\"time format\",timeformat)\n        dateRange.push({name : timeformat})\n\n      }\n      // console.log(start, endtime, dateRange)\n      return dateRange;\n    }\n\n    function fetchUser(date, arr, key, index, service){\n\n      var starttime = moment(date).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n      service.get({start : starttime , end : endtime} , function(data){\n        if(key === 'user') { \n            arr[index].y = data.inrange;\n          }\n        else if(key === 'ver'){ \n            arr[index].y = data.inrangever;\n          }\n      });\n    }\n\n    function fetchAllUser(date, arr, key, index, service){\n\n      var starttime = moment(date).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n      service.get({start : starttime , end : endtime} , function(data){\n        if(key === 'user') { \n            arr[index].y = data.all;\n          }\n        else if(key === 'ver'){ \n            arr[index].y = data.allver;\n          }\n      });\n    }\n\n    function fetchCall(date, arr, key, index, service){\n\n      var starttime = moment(date).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n      var serviceCall = service.get({start : starttime, end : endtime});\n        serviceCall.$promise.then(function(data){\n          if(key === 'init') { \n            arr[index].y = data.init;\n          }\n          else if(key === 'ring'){ \n            arr[index].y = data.ring;\n          }\n          else if(key === 'accept'){ \n            arr[index].y = data.accept;\n          }\n      })\n    }\n\n    function loadChartData(start, end, key, data){\n    /*\n      Parameter Description : \n      - start : start time for chart\n      - end : end time for data\n      - key : fill with 0 if data == call, fill with 1 for user and 2 for verified user if data == newuser/alluser\n      - data : data type (call, newuser, alluser)\n    */\n\n      // console.log(start, end)\n      var dataArray = initializeDate(start, end);\n\n      if(data === 'newuser' || data === 'alluser'){\n        var userService = new cdrs.getUserCount();  \n      }\n      else if(data === 'call'){\n        var callService = new cdrs.getCallCount();\n      }\n      \n      var i=0\n      \n      var timestart = moment(start).startOf('day').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n      // console.log(timestart)\n      for (var d = new Date(timestart); d <= end; d.setDate(d.getDate() + 1)) {\n        // console.log(d)\n        if(data === 'newuser'){\n          fetchUser(d, dataArray, key, i, userService);\n        }\n        else if(data === 'alluser'){\n          fetchAllUser(d, dataArray, key, i, userService);\n        }\n        else if(data === 'call'){\n          fetchCall(d, dataArray, key, i, callService);\n        }  \n        \n        i++;\n      }\n      // console.log(dataArray)\n      return dataArray;\n    }\n\n    function fetchData(date, index, arr, userService, callService){\n\n      var starttime = moment(date).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n      var serviceUser = userService.get({start : starttime, end : endtime});\n        serviceUser.$promise.then(function(data){\n          arr[index].all = data.all;\n          arr[index].allver = data.allver;\n          arr[index].inrange = data.inrange;\n          arr[index].inrangever = data.inrangever;\n      })\n\n      var serviceCall = callService.get({start : starttime, end : endtime});\n      serviceCall.$promise.then(function(data){\n        arr[index].init = data.init;\n        arr[index].ring = data.ring;\n        arr[index].accept = data.accept;\n      })\n\n    }\n\n    function loadTableData(start, end){\n      var dataArray = initializeDate(start, end);\n\n      var timestart = moment(start).startOf('day').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n      // console.log(timestart)\n      var i=0;\n\n      var userService = new cdrs.getUserCount();\n      var callService = new cdrs.getCallCount();\n\n      for (var d = new Date(timestart); d <= end; d.setDate(d.getDate() + 1)) {\n          fetchData(d, i, dataArray, userService, callService);\n        i++;\n      }\n      // console.log(dataArray)\n      return dataArray;\n    }\n\n    function populateChartData(start, end, data){\n      if(data === 'newuser'){\n        var user = loadChartData(start, end, 'user', data)\n        var verified = loadChartData(start, end,'ver', data)\n        // console.log(start,end,user)\n        return [\n            {\n                name : \"New User\", \n                data : user\n            },\n            {\n                name : \"New Verified User\", \n                data : verified\n            }\n        ];\n      }\n      else if(data === 'alluser'){\n        var alluser = loadChartData(start, end, 'user', data)\n        var allverified = loadChartData(start, end,'ver', data)\n\n        return [\n            {\n                name : \"Total User\", \n                data : alluser\n            },\n            {\n                name : \"Total Verified User\", \n                data : allverified\n            }\n        ];\n      }\n      else if(data === 'call'){\n        var init = loadChartData(start, end, 'init', data)\n        var ring = loadChartData(start, end,'ring', data)\n        var accept = loadChartData(start, end,'accept', data)\n\n        return [\n            {\n                name : \"Call Attempt\", \n                data : init\n            },\n            {\n                name : \"Incoming Call\", \n                data : ring\n            },\n            {\n                name : \"Accepted Call\", \n                data : accept\n            }\n        ];\n      }  \n      \n    }\n\n    \n    function getChart(start, end, chartType, data, chartTitle){\n      /* \n        Parameter Description \n        - start : Start time for chart\n        - end : End time for chart\n        - chartType : determining chart type fo highcharts\n        - data : data type for chart (newuser, alluser, call)\n      */\n\n      return {\n          options: {\n              chart: {\n                  type: chartType,\n                  zoomType: 'x'\n              }\n          },\n          title: {\n             text: chartTitle\n          },\n          series: populateChartData(start, end , data),\n          xAxis: {\n            type: 'category',\n            dateTimeLabelFormats: {\n               day: '%d %B'    //ex- 01 Jan 2016\n            }\n          },\n          loading: false\n      }\n    }\n\n  }\n  \n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .controller('SettingsController', SettingsController);\n\n  /** @ngInject */\n  function SettingsController() {\n    var vm = this;\n\n    vm.cred = {};\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController(cdrs, moment) {\n\n    var vm = this;\n\n    vm.today = new Date(\"01/08/2016\");\n    getBadgeData(vm.today, cdrs);\n    getWeeklyTotalUser(vm.today);\n    getWeeklyTotalCall(vm.today);\n\n    vm.userChartConfig = {\n        options: {\n            chart: {\n                type: 'line',\n                zoomType: 'x'\n            }\n        },\n        title: {\n           text: 'User Statistics This Week'\n        },\n        series: populateUserChartData(vm.today),\n        xAxis: {\n          type: 'category',\n          dateTimeLabelFormats: {\n             day: '%d %B'    //ex- 01 Jan 2016\n          }\n        },\n        loading: false\n    }\n\n    vm.callChartConfig = {\n        options: {\n            chart: {\n                type: 'line',\n                zoomType: 'x'\n            }\n        },\n        title: {\n           text: 'Call Statistics This Week'\n        },\n        series: populateCallChartData(vm.today),\n        xAxis: {\n          type: 'category',\n          dateTimeLabelFormats: {\n             day: '%d %B'    //ex- 01 Jan 2016\n          }\n        },\n        loading: false\n    }\n\n\n    function getBadgeData(date){\n\n        var starttime = moment(date).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n        var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n        var userService = new cdrs.getUserCount();\n\n        userService.get({start : starttime , end : endtime} , function(callback){\n          vm.newUser = callback.inrange;\n          vm.newVerifiedUser = callback.inrangever;\n        });\n\n        var callService = new cdrs.getCallCount();\n\n        callService.get({start : starttime , end : endtime} , function(callback){\n          vm.callAttempt = callback.init;\n          vm.avgCallAttempt = callback.ring;\n        });\n    }\n\n    function initializeDate(date){\n      \n      var dateRange = [];\n      var timestart = moment(date).startOf('isoweek').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n      \n      for (var d = new Date(timestart); d <= date; d.setDate(d.getDate() + 1)) {\n\n        var starttime = moment(d).startOf('day').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n        var timeformat = moment(starttime, \"MM/DD/YYYY h:mm:ss A\").format(\"DD MMM\").toString();\n        dateRange.push({name : timeformat})\n\n      }\n\n      return dateRange;\n    }\n\n    function fetchUser(date, arr, key, index, service){\n\n      var starttime = moment(date).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n      // console.log('cek')\n      var serviceCall = service.get({start : starttime, end : endtime});\n        serviceCall.$promise.then(function(data){\n          if(key) { \n            // console.log(\"cek\");\n            arr[index].y = data.inrange;\n            // console.log(data.inrange, data.inrangever, index)\n          }\n          //get verified user data\n          else{ \n            arr[index].y = data.inrangever;\n            // console.log(callback.inrangever)\n          }\n      })\n    }\n\n    function loadUserData(date, key){\n\n      var dataArray = initializeDate(date);\n      \n      var userService = new cdrs.getUserCount();\n      var i=0\n      \n      var timestart = moment(date).startOf('isoweek').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n      // console.log(timestart)\n      for (var d = new Date(timestart); d <= date; d.setDate(d.getDate() + 1)) {\n        // console.log(d)\n        fetchUser(d, dataArray, key, i, userService);\n        i++;\n      }\n\n      // console.log(dataArray, dataArray.length)\n      return dataArray;\n    }\n\n    function populateUserChartData(date){\n      var user = loadUserData(date,1)\n      var verified = loadUserData(date,0)\n\n      return [\n          {\n              name : \"New User\", \n              data : user\n          },\n          {\n              name : \"New Verified User\", \n              data : verified\n          }\n      ];\n    }\n\n    function getWeeklyTotalUser(date){\n\n      var firstDayInWeek = moment(date).startOf('isoweek').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n\n      var starttime = moment(firstDayInWeek, \"MM/DD/YYYY h:mm:ss A\").startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      // console.log(starttime,endtime)\n      var service = new cdrs.getUserCount();\n\n      var serviceCall = service.get({start : starttime, end : endtime});\n        serviceCall.$promise.then(function(data){\n          vm.all = data.all;\n         vm.allver = data.allver;\n         vm.inrange = data.inrange;\n         vm.inrangever = data.inrangever;\n      })\n\n    }\n    \n    function fetchCall(date, arr, key, index, service){\n\n      var starttime = moment(date).startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n\n      // console.log('cek')\n      var serviceCall = service.get({start : starttime, end : endtime});\n        serviceCall.$promise.then(function(data){\n          if(key === 1) { \n            // console.log(\"cek\");\n            arr[index].y = data.init;\n            // console.log(data.init, data.ring, data.accept)\n          }\n          //get verified user data\n          else if(key === 2){ \n            arr[index].y = data.ring;\n            // console.log(callback.inrangever)\n          }\n          else { \n            arr[index].y = data.accept;\n            // console.log(callback.inrangever)\n          }\n      })\n    }\n\n    function loadCallData(date, key){\n\n      var dataArray = initializeDate(date);\n      \n      var callService = new cdrs.getCallCount();\n      var i=0\n      \n      var timestart = moment(date).startOf('isoweek').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n      // console.log(timestart)\n      for (var d = new Date(timestart); d <= date; d.setDate(d.getDate() + 1)) {\n        // console.log(d)\n        fetchCall(d, dataArray, key, i, callService);\n        i++;\n      }\n\n      // console.log(dataArray, dataArray.length)\n      return dataArray;\n    }\n\n    function populateCallChartData(date){\n      var init = loadCallData(date,1)\n      var ring = loadCallData(date,2)\n      var accept = loadCallData(date,3)\n\n      return [\n          {\n              data: init, \n              name: 'Call Attempt'\n          },\n          {\n              data: ring, \n              name: 'Incoming Call'\n          },\n          {\n              data: accept, \n              name: 'Accepted Call'\n          }\n      ];\n    }\n\n    function getWeeklyTotalCall(date){\n\n      var firstDayInWeek = moment(date).startOf('isoweek').format(\"MM/DD/YYYY h:mm:ss A\").toString();\n\n      var starttime = moment(firstDayInWeek, \"MM/DD/YYYY h:mm:ss A\").startOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      var endtime = moment(date).endOf('day').format(\"YYYYMMDDHHmmss\").toString();\n      // console.log(starttime,endtime)\n      var service = new cdrs.getCallCount();\n\n      var serviceCall = service.get({start : starttime, end : endtime});\n        serviceCall.$promise.then(function(data){\n         vm.attempt = data.init;\n         vm.incoming = data.ring;\n         vm.accept = data.accept;\n      })\n\n    }\n\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log,$rootScope, $location, auth) {\n\n    $log.debug('runBlock end');\n      \n    var onEvent = $rootScope.$on('$stateChangeStart', function(event, next, before) {\n      if(next.requireLogin || before.requireLogin){\n        var service = new auth.checkauth();\n        service.get().$promise.then(\n          function(error){\n            if((next.requireLogin || before.requireLogin) && error.status === 401){\n              // console.log(\"get here?\")\n\n              $location.path('/login');\n              event.preventDefault();\n            }\n          }\n        )\n      }\n    });\n\n    $rootScope.$on('$destroy', onEvent);\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/account/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'login',\n        requireLogin: false\n      })\n      .state('login', {\n        url: '/login',\n        templateUrl: 'app/account/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'login',\n        requireLogin: false\n      })\n      .state('register', {\n        url: '/register',\n        templateUrl: 'app/account/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'register',\n        requireLogin: false\n      })\n      .state('success', {\n        url: '/register/success',\n        templateUrl: 'app/account/register/register.success.html',\n        requireLogin: false\n      })\n      .state('dashboard', {\n        url: '/dashboard',\n        templateUrl: 'app/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'dashboard',\n        requireLogin: true\n      })\n      .state('statistics', {\n        url: '/statistics',\n        templateUrl: 'app/statistics/statistics.html',\n        controller: 'StatisticsController',\n        controllerAs: 'statistics',\n        requireLogin: true\n      })\n      .state('settings', {\n        url: '/settings',\n        templateUrl: 'app/settings/settings.html',\n        controller: 'SettingsController',\n        controllerAs: 'settings',\n        requireLogin: false\n      })\n      .state('logout', {\n        url: '/logout',\n        resolve : {\n          logout : function($location, $rootScope, auth){\n            'ngInject';\n            auth.logout(function(s){\n              if(s === 200){\n                $rootScope.loginStatus = auth.isLoggedIn();\n                $location.path('/login');\n              }\n            })\n          }\n        },\n        requireLogin: true\n      });\n\n    $urlRouterProvider.otherwise('/login');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('cdrsDashboard')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"cdrsDashboard\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/dashboard/dashboard.html\",\"<div class=page><acme-navbar></acme-navbar><div class=container><div class=col-md-12><h3>Dashboard</h3><a ui-sref=dashboard class=home-link>Home</a> <span class=dashboard-subtitle>| Today Statistics</span><div class=\\\"badges-container col-md-12\\\"><div class=\\\"col-md-3 badges-stat\\\"><div class=\\\"container col-md-12 badges-inner\\\"><div class=\\\"col-md-2 icon\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i></div><div class=\\\"col-md-10 badges-stat-desc\\\"><span class=badges-number>{{dashboard.newUser}}</span> <span class=badges-title>New User</span></div></div></div><div class=\\\"col-md-3 badges-stat\\\"><div class=\\\"container col-md-12 badges-inner\\\"><div class=\\\"col-md-2 icon\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></div><div class=\\\"col-md-10 badges-stat-desc\\\"><span class=badges-number>{{dashboard.newVerifiedUser}}</span> <span class=badges-title>New Verified User</span></div></div></div><div class=\\\"col-md-3 badges-stat\\\"><div class=\\\"container col-md-12 badges-inner\\\"><div class=\\\"col-md-2 icon\\\"><i class=\\\"glyphicon glyphicon-earphone\\\"></i></div><div class=\\\"col-md-10 badges-stat-desc\\\"><span class=badges-number>{{dashboard.callAttempt}}</span> <span class=badges-title>Call Attempt</span></div></div></div><div class=\\\"col-md-3 badges-stat\\\"><div class=\\\"container col-md-12 badges-inner\\\"><div class=\\\"col-md-2 icon\\\"><i class=\\\"glyphicon glyphicon-transfer\\\"></i></div><div class=\\\"col-md-10 badges-stat-desc\\\"><span class=badges-number>{{dashboard.avgCallAttempt}}</span> <span class=badges-title>Incoming Call</span></div></div></div></div><div class=\\\"container-chart col-md-12\\\"><h4 class=dashboard-subtitle>User Statistics This Week</h4><div class=\\\"col-md-9 chart-card\\\"><highchart id=userChart config=dashboard.userChartConfig class=span10></highchart></div><div class=\\\"col-md-3 chart-badges\\\"><h3>QePon User</h3><span class=subtitle>Quick Report for User Statistics</span><hr><span class=title>Total New User This Week</span> <span class=number>{{dashboard.all}}</span> <span class=title>Total User Until Today</span> <span class=number>{{dashboard.allver}}</span> <span class=title>Total New Verified User This Week</span> <span class=number>{{dashboard.inrange}}</span> <span class=title>Total Verified User Until Today</span> <span class=number>{{dashboard.inrangever}}</span></div></div><div class=\\\"container-chart col-md-12\\\"><div class=col-md-6><h4 class=dashboard-subtitle>Call Statistics This Week</h4><div class=\\\"first-card week-badges\\\"><table><tr><td class=column-with-border>This Week</td><td class=column-data><i class=amount>{{dashboard.attempt}}</i><br>Call Attempt</td><td class=column-data><i class=amount>{{dashboard.incoming}} </i><br>Incoming Call</td><td class=column-data><i class=amount>{{dashboard.all}} </i><br>Accepted Call</td></tr></table></div><div class=\\\"first-card chart-card\\\"><highchart id=callChart config=dashboard.callChartConfig class=span10></highchart></div></div><div class=col-md-6><h4 class=dashboard-subtitle>Installed/Uninstalled (User) This Week</h4><div class=chart-card><highchart id=chart3 config=dashboard.callChartConfig class=span10></highchart></div><div class=week-badges><table><tr><td class=column-with-border>This Week</td><td class=column-data><i class=amount>20 </i><br>Installed User</td><td class=column-data>&nbsp;</td><td class=column-data><i class=amount>20 </i><br>Uninstalled User</td></tr></table></div></div></div></div></div></div>\");\n$templateCache.put(\"app/settings/settings.html\",\"<div class=page><acme-navbar></acme-navbar><div class=container><div class=\\\"col-md-8 col-md-offset-2 form-container\\\"><h3 class=form-title>User Info</h3><label for=info class=radio-inline><input id=info type=radio name=option ng-model=options value=info>Change User Info</label><label for=password class=radio-inline><input id=password type=radio name=option ng-model=options value=password>Change Password</label><br><br><br><form class=form method=post name=form ng-submit=settings.update() novalidate ng-show=\\\"options == \\'info\\' \\\"><div class=form-group><label>Firstname :</label><input type=text name=firstname ng-model=settings.cred.firstname class=form-control placeholder=\\\"Your First Name\\\" required></div><div class=form-group><label>Lastname :</label><input type=text name=lastname ng-model=settings.cred.lastname class=form-control placeholder=\\\"Your Last Name\\\" required></div><div class=form-group><label>Country :</label><input type=text name=country ng-model=settings.cred.country class=form-control placeholder=\\\"Your Country\\\" required></div><div class=form-group><label>Phone Number :</label><input type=text name=phone ng-model=settings.cred.phone class=form-control placeholder=\\\"Your Phone Number\\\" required></div><div class=form-group><label>Address :</label><textarea type=text name=address ng-model=settings.cred.address class=form-control placeholder=\\\"Your Address\\\">\\n        </textarea></div><div class=form-action><button type=submit class=\\\"btn btn-default\\\">Update Data</button></div></form><form class=form method=post name=form ng-submit=settings.update() novalidate ng-show=\\\"options == \\'password\\' \\\"><div class=form-group><label>Current Password :</label><input type=password name=password ng-model=settings.cred.password class=form-control placeholder=\\\"Your Password\\\" required></div><div class=form-group><label>New Password :</label><input type=password name=password ng-model=settings.cred.password class=form-control placeholder=\\\"Your Password\\\" required></div><div class=form-action><button type=submit class=\\\"btn btn-default\\\">Update Password</button></div></form></div></div></div>\");\n$templateCache.put(\"app/settings/settings.password.html\",\"<div class=\\\"container col-md-12 register-page\\\"><div class=\\\"col-lg-4 col-lg-offset-4\\\"><form class=form method=post name=form novalidate><div class=form-group><h3>Register Success</h3><a ui-sref=login>You can now login to Dashboard</a></div></form></div></div>\");\n$templateCache.put(\"app/statistics/statistics.html\",\"<div class=page><acme-navbar></acme-navbar><div class=container><div class=col-md-12><h3>Call Data Record Statistics</h3><a ui-sref=dashboard class=home-link>Home</a> <span class=dashboard-subtitle>| Full Statistics</span><div class=clear></div><div class=\\\"container-period col-md-12\\\"><h4>Choose Period :</h4><label for=date class=radio-inline><input id=date type=radio name=option ng-model=options value=date> Date Range</label><label for=month class=radio-inline><input id=month type=radio name=option ng-model=options value=month>Monthly</label><br><div class=clear></div><div class=\\\"col-md-10 add-spacing\\\" ng-show=\\\"options == \\'date\\' \\\"><form name=frm ng-submit=statistics.submitDate()><div class=col-md-4><span>Start time</span><p class=input-group><input type=text class=form-control uib-datepicker-popup={{statistics.format}} ng-model=statistics.time.starttime is-open=statistics.popup1.opened datepicker-options=statistics.dateOptions ng-required=true close-text=Close alt-input-formats=altInputFormats> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-click=statistics.open1()><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></span></p></div><div class=col-md-4><span>End time</span><p class=input-group><input type=text class=form-control uib-datepicker-popup={{statistics.format}} ng-model=statistics.time.endtime is-open=statistics.popup2.opened datepicker-options=statistics.dateOptions ng-required=true close-text=Close alt-input-formats=altInputFormats> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-click=statistics.open2()><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></span></p></div><div class=clear></div><button type=submit class=\\\"btn btn-default\\\">See Statistics</button></form></div><div class=\\\"col-md-4 add-spacing\\\" ng-show=\\\"options == \\'month\\' \\\"><form name=form ng-submit=statistics.submitMonth()><span>Choose Month</span><p class=input-group><input type=text class=form-control uib-datepicker-popup={{statistics.format}} ng-model=statistics.month is-open=statistics.popup3.opened datepicker-options=\\\"{minMode: \\'month\\'}\\\" uib-datepicker-mode=\\\"\\'month\\'\\\"> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-click=statistics.open3()><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></span></p><button type=submit class=\\\"btn btn-default\\\">See Statistics</button></form></div></div><div class=\\\"caption-container col-md-12\\\"><div class=\\\"first-caption col-md-12\\\"><div class=col-md-4><span class=number>{{statistics.callavg | number:3 }}</span> <span class=caption>Average Call Attempts</span></div><div class=col-md-4><span class=number>{{statistics.callavgperday | number:3 }}</span> <span class=caption>Average Call Attempts/User/Day</span></div><div class=\\\"last-caption col-md-4\\\"><span class=number>{{statistics.alluser}}</span> <span class=caption>Total User</span></div></div><div class=clear></div><div class=\\\"second-caption col-md-12\\\"><div class=col-md-4><span class=number>{{statistics.allveruser}}</span> <span class=caption>Total New Verified User</span></div><div class=col-md-4><span class=number>{{statistics.callattempt}}</span> <span class=caption>Total Call Attempts</span></div><div class=\\\"last-caption col-md-4\\\"><span class=number>{{statistics.days}}</span> <span class=caption>Total Days</span></div></div></div><div class=clear></div><div class=separator-tabs><table><tr><td class=column-with-border><a ng-click=statistics.table() class=tabs-link><i class=\\\"glyphicon glyphicon-th-large\\\"></i> Table</a></td><td class=column-data><a ng-click=statistics.graph() class=tabs-link><i class=\\\"glyphicon glyphicon-signal\\\"></i> Graphic/Chart</a></td></tr></table></div><div class=clear></div><div class=\\\"table-container col-md-12\\\" ng-show=\\\"statistics.tabs == \\'table\\' \\\"><h4 class=dashboard-subtitle>Statistics This Month</h4><table class=statistics-table><thead><tr class=head><td>Date</td><td>New Users</td><td>New Verified Users</td><td>Total Users</td><td>Total Verified Uses</td><td>Call Attempts</td><td>Incoming Calls</td><td>Accepted Calls</td><!--  <td>Installed (user)</td>\\n        <td>Uninstalled (user)</td> --></tr></thead><tbody><tr ng-repeat=\\\"dt in statistics.tableData\\\"><td>{{dt.name}}</td><td>{{dt.inrange}}</td><td>{{dt.inrangever}}</td><td>{{dt.all}}</td><td>{{dt.allver}}</td><td>{{dt.init}}</td><td>{{dt.ring}}</td><td>{{dt.accept}}</td></tr></tbody></table></div><div class=col-md-12 ng-show=\\\"statistics.tabs == \\'graph\\' \\\"><h4>All Statistics</h4><div class=\\\"col-md-12 chart-card\\\" ng-show=\\\"statistics.showChart == true\\\"><!-- <nvd3 options=\\'dashboard.chartOptions\\' data=\\'dashboard.userChartData\\'></nvd3> --><highchart id=newUserChart config=statistics.newUserChartOptions class=span10></highchart></div><div class=\\\"col-md-12 chart-card\\\" ng-show=\\\"statistics.showChart == true\\\"><!-- <nvd3 options=\\'dashboard.chartOptions\\' data=\\'dashboard.userChartData\\'></nvd3> --><highchart id=allUserChart config=statistics.allUserChartOptions class=span10></highchart></div><div class=\\\"col-md-12 chart-card\\\" ng-show=\\\"statistics.showChart == true\\\"><!-- <nvd3 options=\\'dashboard.chartOptions\\' data=\\'dashboard.userChartData\\'></nvd3> --><highchart id=callChart config=statistics.callChartOptions class=span10></highchart></div><div class=\\\"col-md-12 chart-card\\\" ng-show=\\\"statistics.showChart == true\\\"><!-- <nvd3 options=\\'dashboard.chartOptions\\' data=\\'dashboard.userChartData\\'></nvd3> --><highchart id=callChart config=statistics.pieChartConfig class=span10></highchart><ul class=level-caption><li ng-repeat=\\\"level in statistics.userLevel\\\"><span class=\\\"glyphicon glyphicon-stop\\\" style=color:{{level.color}}></span> Level {{level.level}} : {{level.value}}</li></ul></div></div></div></div></div>\");\n$templateCache.put(\"app/account/login/login.html\",\"<div class=\\\"container col-md-12 login-page\\\"><div class=\\\"col-lg-4 col-lg-offset-4\\\"><form class=form method=post name=form ng-submit=login.login() novalidate><div class=form-group><h3>Dashboard Login Page</h3><i>{{login.title}}</i></div><uib-alert type=danger class=text-center ng-show=\\\"login.showAlert == true\\\" ng-click=login.closeAlert()>{{login.alertMsg}}</uib-alert><div class=form-group><input type=email name=email ng-model=login.cred.email class=form-control placeholder=\\\"Enter Email\\\" required></div><div class=form-group><input type=password name=password ng-model=login.cred.password class=form-control placeholder=\\\"Enter Password\\\" required></div><div ng-messages=form.email.$error role=alert><div ng-message=email class=error-notice>This field must be a valid email address.</div></div><div class=form-action><button type=submit>Login</button></div><p class=message>Not registered? <a ui-sref=register>Create an account</a></p></form></div></div>\");\n$templateCache.put(\"app/account/register/register.html\",\"<div class=\\\"container col-md-12 register-page\\\"><div class=\\\"col-md-7 col-md-offset-2\\\"><form class=form method=post name=form ng-submit=register.register() novalidate><div class=\\\"form-group col-md-12\\\"><h3>Register Page</h3><i>Please enter Email and Password to register</i></div><div class=\\\"form-group col-md-6\\\"><!-- <label>Email</label> --> <input type=email name=email ng-model=register.cred.email class=form-control placeholder=\\\"Your Email\\\" required></div><div class=\\\"form-group col-md-6\\\"><!-- <label>Password</label> --> <input type=password name=password ng-model=register.cred.password class=form-control placeholder=\\\"Your Password\\\" required></div><div class=\\\"form-group col-md-6\\\"><!-- <label>First Name</label> --> <input type=text name=firstname ng-model=register.cred.firstname class=form-control placeholder=\\\"Your First Name\\\" required></div><div class=\\\"form-group col-md-6\\\"><!-- <label>Last Name</label> --> <input type=text name=lastname ng-model=register.cred.lastname class=form-control placeholder=\\\"Your Last Name\\\" required></div><div class=\\\"form-group col-md-6\\\"><!-- <label>Country</label> --> <input type=text name=country ng-model=register.cred.country class=form-control placeholder=\\\"Your Country\\\" required></div><div class=\\\"form-group col-md-6\\\"><!-- <label>Phone Number</label> --> <input type=text name=phone ng-model=register.cred.phone class=form-control placeholder=\\\"Your Phone Number\\\" required></div><div class=\\\"form-group col-md-6\\\"><!-- <label>Address</label> --><textarea type=text name=address ng-model=register.cred.address class=form-control placeholder=\\\"Your Address\\\">\\n          </textarea></div><div class=form-action><button type=submit>Register</button></div></form></div></div>\");\n$templateCache.put(\"app/account/register/register.success.html\",\"<div class=\\\"container col-md-12 register-page\\\"><div class=\\\"col-lg-4 col-lg-offset-4\\\"><form class=form method=post name=form novalidate><div class=form-group><h3>Register Success</h3><a ui-sref=login>You can now login to Dashboard</a></div></form></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click=\\\"$ctrl.isCollapsed = !$ctrl.isCollapsed\\\"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <img src=assets/images/qepon_logo.png alt=\\\"QePon Logo\\\" class=navbar-logo> <a href=/ >CDR dashboard</a></div><div uib-collapse=$ctrl.isCollapsed class=\\\"navbar-collapse collapse\\\" id=bs-example-navbar-collapse-6><!-- <div class=\\\"collapse navbar-collapse\\\" > --><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a ui-sref=dashboard><span>Dashboard</span></a></li><li><a ui-sref=statistics><span>Call Data Record Statistics</span></a></li><li><a class=navbar-text ui-sref=settings><i class=\\\"glyphicon glyphicon-user\\\"></i>&nbsp; Hi, {{vm.username}}!</a></li><li><a ui-sref=logout alt=Logout><span class=\\\"glyphicon glyphicon-log-out\\\"></span></a></li></ul></div></div></nav>\");}]);"],"sourceRoot":"/source/"}